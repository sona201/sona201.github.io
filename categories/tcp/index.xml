<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tcp on 卡塞尔的博客</title>
    <link>/categories/tcp/</link>
    <description>Recent content in tcp on 卡塞尔的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 19 May 2023 01:05:14 +0800</lastBuildDate><atom:link href="/categories/tcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tc_实验</title>
      <link>/post/tcp/tc_%E5%AE%9E%E9%AA%8C/</link>
      <pubDate>Fri, 19 May 2023 01:05:14 +0800</pubDate>
      
      <guid>/post/tcp/tc_%E5%AE%9E%E9%AA%8C/</guid>
      <description>排查python server当时的系统信息 发现并没有异常，仅记录device eth0 entered promiscuous mode表示当时网卡 eth0 进入混杂模式,应该与当时启用tcpd</description>
    </item>
    
    <item>
      <title>Wireshark技巧</title>
      <link>/post/tcp/wireshark%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Fri, 19 May 2023 01:05:14 +0800</pubDate>
      
      <guid>/post/tcp/wireshark%E6%8A%80%E5%B7%A7/</guid>
      <description>相关文章 wireshark你一定会喜欢的技巧摘要 修改seq的为绝对值 relative 配置rt 分析 分析图 wireshark https 抓包 tls contains &amp;ldquo;baidu.com&amp;rdquo; wireshark 没有权限 或者下图 命令行赋权 直接简单粗</description>
    </item>
    
    <item>
      <title>Wireshark本地劫持https</title>
      <link>/post/tcp/wireshark%E6%9C%AC%E5%9C%B0%E5%8A%AB%E6%8C%81https/</link>
      <pubDate>Fri, 19 May 2023 01:05:14 +0800</pubDate>
      
      <guid>/post/tcp/wireshark%E6%9C%AC%E5%9C%B0%E5%8A%AB%E6%8C%81https/</guid>
      <description>相关文章 方案: 手动启动浏览器，让浏览器把证书放到指定目录，wireshark去读取，然后解析，就可以得到解密后的包了，等同于http请求抓包</description>
    </item>
    
    <item>
      <title>tcp实验</title>
      <link>/post/tcp/%E5%AE%9E%E9%AA%8C/</link>
      <pubDate>Fri, 05 May 2023 01:05:14 +0800</pubDate>
      
      <guid>/post/tcp/%E5%AE%9E%E9%AA%8C/</guid>
      <description>抓包: 两台服务器，一台启动python http服务，上面有一个2G的文件。另一台下载。 怎么抓包，在那台机器上抓包，是不是指定来源ip就可以了</description>
    </item>
    
  </channel>
</rss>
